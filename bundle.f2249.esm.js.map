{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///./index.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact/src/create-context.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","render","hydrate","Preact","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","App","u","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","current","k","b","this","context","g","indexOf","base","w","push","x","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","P","a","v","C","$","A","nextSibling","q","O","S","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","__E","B","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","unmount","componentWillUnmount","D","firstChild","E","F","G","Consumer","Provider","splice","Array","isArray","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout"],"mappings":"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","file":"bundle.f2249.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/receipts/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import './style';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Hello, World!</h1>\n    </div>\n  );\n}\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\nimport { isArray } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"],"sourceRoot":""}